/*
 * Copyright (C) 2011 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

dependencies {
  compile project(':rosjava_bootstrap')
  compile project(':rosjava_std_msgs')
}

/* 
  Should scan the package.xml of the message package we are generating 
  and substitute that version number here. Just use the group version for now.
  version = '0.3.0-SNAPSHOT'
*/

task generateSources(type: JavaExec) {
  def outputDir = "${buildDir}/generated-src"
  outputs.dir file(outputDir)
  def List<String> argumentList = new ArrayList<String>()
  argumentList.add(outputDir)
  argumentList.add("actionlib_msgs")
  argumentList.add("diagnostic_msgs")
  argumentList.add("geometry_msgs")
  argumentList.add("sensor_msgs")
  argumentList.add("nav_msgs")
  argumentList.add("shape_msgs")
  argumentList.add("stereo_msgs")
  argumentList.add("trajectory_msgs")
  argumentList.add("visualization_msgs")
  args argumentList
  classpath = configurations.runtime
  main = 'org.ros.internal.message.GenerateInterfaces'
}

compileJava.source generateSources.outputs.files

eclipse.classpath.file {
  withXml {
    // TODO(damonkohler): Avoid repetition of build directory. This is
    // necessary because Eclipse wants a project relative path.
    it.asNode().appendNode('classpathentry', [kind: 'src', path: 'build/generated-src'])
  }
}
